name: MBSim-Env
on: [push]
env:
  MBSIMENVSERVERNAME: wwwstaging.mbsim-env.de
jobs:
  testJob:
    runs-on: ubuntu-latest
    steps:
      - run: echo "$GITHUB_REF"
      - run: echo "$GITHUB_REF_NAME . master"
      - run: echo "$GITHUB_REPOSITORY . friedrichatgc/buildci"
      - run: echo "$GITHUB_REPOSITORY_OWNER"
      - run: echo "$GITHUB_SHA . 0895326c858e566e28d160ac28d974b68f1eeadf"
      - run: echo "${{github.REF}}"
      - run: echo "${{github.REF_NAME}}"
      - run: echo "${{github.REPOSITORY}}"
      - run: echo "${{github.REPOSITORY_OWNER}}"
      - run: echo "${{github.SHA}}"
      - run: echo "${{github.workspace}}/mbsim-env"
      - run: echo "${{github.WORKSPACE}}/mbsim-env"
      - name: "Detailed build/examples output"
        shell: python
        run: |
          import os
          print("https://${{env.MBSIMENVSERVERNAME}}/builds/run/")







#name: MBSim-Env
#on: [push]
#env:
#  MBSIMENVTAGNAME: staging
#  MBSIMENVSERVERNAME: wwwstaging.mbsim-env.de
#  MBSIMENVDATABASE: www.mbsim-env.de:15432
#  MBSIMENVFILESTORAGE: www.mbsim-env.de:11022
#  mbsimenvsec_githubStatusAccessToken: ${{secrets.githubStatusAccessToken}}
#  mbsimenvsec_djangoSecretKey: ${{secrets.djangoSecretKey}}
#  mbsimenvsec_postgresPassword: ${{secrets.postgresPassword}}
#  mbsimenvsec_filestoragePassword: ${{secrets.filestoragePassword}}
#  mbsimenvsec_codecovUploadToken_fmatvec: ${{secrets.codecovUploadToken_fmatvec}}
#  mbsimenvsec_codecovUploadToken_hdf5serie: ${{secrets.codecovUploadToken_hdf5serie}}
#  mbsimenvsec_codecovUploadToken_openmbv: ${{secrets.codecovUploadToken_openmbv}}
#  mbsimenvsec_codecovUploadToken_mbsim: ${{secrets.codecovUploadToken_mbsim}}
#jobs:
#  get_ci_branches:
#    runs-on: ubuntu-latest
#    outputs:
#      branches: ${{steps.branches.outputs.branches}}
#    steps:
#      - name: "Query MBSim-Env for CI branch combinations"
#        id: branches
#        shell: python
#        run: |
#          import json
#          import requests
#          import os
#          #mfmf response=requests.get("https://${{env.MBSIMENVSERVERNAME}}/service/db/getbranchcombi/CIBranches/")
#          response=requests.get("http://www.mbsim-env.de:12345/service/db/getbranchcombi/CIBranches/")
#          print("::set-output name=branches::"+json.dumps(response.json()["data"]))
#  build:
#    runs-on: ubuntu-latest
#    needs: get_ci_branches
#    strategy:
#      matrix:
#        branches: ${{fromJson(needs.get_ci_branches.outputs.branches)}}
#        os:
#          - buildType: "linux64-ci"
#            image: "mbsimenv/build"
#    steps:
#      - name: "Dump build config"
#        run: >
#          echo -e " buildType = ${{matrix.os.buildType}}
#                    image = ${{matrix.os.image}}:${{env.MBSIMENVTAGNAME}}
#                    fmatvecBranch = ${{matrix.branches.fmatvecBranch}}
#                    hdf5serieBranch = ${{matrix.branches.hdf5serieBranch}}
#                    openmbvBranch = ${{matrix.branches.openmbvBranch}}
#                    mbsimBranch = ${{matrix.branches.mbsimBranch}}" | tr -s ' '
#      - name: "Pull docker build image"
#        run: docker image pull ${{matrix.os.image}}:${{env.MBSIMENVTAGNAME}} && mkdir -m 777 -p ${{github.workspace}}/mbsim-env
#      - name: "Run build/examples"
#        run: >
#          docker run
#          --init
#          --label buildtype=${{matrix.os.buildType}}
#          --env MBSIMENVDATABASE
#          --env MBSIMENVFILESTORAGE
#          --env MBSIMENVSERVERNAME
#          --env MBSIMENVTAGNAME
#          --env MBSIMENVIMAGEID=$(docker image inspect -f "{{.Id}}" ${{matrix.os.image}}:${{env.MBSIMENVTAGNAME}})
#          --env mbsimenvsec_githubStatusAccessToken
#          --env mbsimenvsec_djangoSecretKey
#          --env mbsimenvsec_postgresPassword
#          --env mbsimenvsec_codecovUploadToken_fmatvec
#          --env mbsimenvsec_codecovUploadToken_hdf5serie
#          --env mbsimenvsec_codecovUploadToken_openmbv
#          --env mbsimenvsec_codecovUploadToken_mbsim
#          -v ${{github.workspace}}/mbsim-env:/mbsim-env
#          ${{matrix.os.image}}:${{env.MBSIMENVTAGNAME}}
#          --buildType ${{matrix.os.buildType}}
#          -j $(nproc)
#          --fmatvecBranch ${{matrix.branches.fmatvecBranch}}
#          --hdf5serieBranch ${{matrix.branches.hdf5serieBranch}}
#          --openmbvBranch ${{matrix.branches.openmbvBranch}}
#          --mbsimBranch ${{matrix.branches.mbsimBranch}}
#      - name: "Detailed build/examples output"
#        shell: python
#        run: |
#          import json
#          import os
#          with open("${{github.workspace}}/mbsim-env/local/.buildInfo.json", "r") as f:
#            buildInfo=json.load(f)
#          print("https://${{env.MBSIMENVSERVERNAME}}/builds/run/"+str(buildInfo["buildRunID"])+"/")
