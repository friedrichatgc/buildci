name: Build Docker Images (Manual)
on:
  workflow_dispatch:
env:
  mbsimenvsec_filestoragePassword: ${{secrets.filestoragePassword}}
  MSYS2INSTALLERURI: "https://www.mbsim-env.de/base/fileDownloadFromDBMedia/msys2mbsimenv-downloads"
  MSYS2INSTALLERFILE: "msys2-base-x86_64-20240507.sfx.exe"
  MSYS2INSTALLERDOWNLOAD: 1
  MSYS2INSTALLERUPDATEBYPUBLIC: 0
  MSYS2INSTALLERUPLOAD: 0
  MSYS2INSTALLERRSYNCURI: "dockeruser@www.mbsim-env.de:/data/databasemedia/msys2mbsimenv-downloads"
  MSYS2INSTALLERRSYNCPORT: 1122
jobs:
  buildmsys2ucrt64Image:
    name: "Bulid MSYS2 Docker Image"
    runs-on: windows-2019
    steps:
      - name: "a"
        if: ${{env.MSYS2INSTALLERUPLOAD}}
        run: echo a
      - name: "b"
        if: ${{env.MSYS2INSTALLERUPLOAD == 1}}
        run: echo b
#      - name: "Checkout"
#        uses: actions/checkout@v4
#      - name: "Docker checkout"
#        run: >
#          docker pull mbsimenv/buildmsys2ucrt64:latest
#      - name: "Docker build"
#        run: >
#          docker build
#          --build-arg=MSYS2INSTALLERURI="${{env.MSYS2INSTALLERURI}}"
#          --build-arg=MSYS2INSTALLERFILE="${{env.MSYS2INSTALLERFILE}}"
#          --build-arg=MSYS2INSTALLERDOWNLOAD="${{env.MSYS2INSTALLERDOWNLOAD}}"
#          --build-arg=MSYS2INSTALLERUPDATEBYPUBLIC="${{env.MSYS2INSTALLERUPDATEBYPUBLIC}}"
#          --build-arg=MSYS2INSTALLERUPLOAD="${{env.MSYS2INSTALLERUPLOAD}}"
#          -t mbsimenv/buildmsys2ucrt64:latest -f Dockerfile .
#      - name: "Upload msys2 db and cache"
#        if: {{env.MSYS2INSTALLERUPLOAD}}
#        run: >
#          docker run
#          --env mbsimenvsec_filestoragePassword
#          --env MSYS2INSTALLERRSYNCPORT
#          --env MSYS2INSTALLERRSYNCURI
#          --entrypoint c:/msys64/usr/bin/bash
#          mbsimenv/buildmsys2ucrt64:latest
#          -l -c /context/msys2_upload.sh
