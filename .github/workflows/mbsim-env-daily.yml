name: MBSim-Env Daily
on:
  schedule:
    - cron: '36 23 * * *'
env:
  # tagname and servername of remote mbsimenv server
  MBSIMENVTAGNAME: staging
  MBSIMENVSERVERNAME: wwwstaging.mbsim-env.de
  # connect to this server:port for www, database and filestorage
  MBSIMENVWWW: www.mbsim-env.de:10443
  MBSIMENVDATABASE: www.mbsim-env.de:15432
  MBSIMENVFILESTORAGE: www.mbsim-env.de:11122
  # get secrets
  mbsimenvsec_githubStatusAccessToken: ${{secrets.githubStatusAccessToken}}
  mbsimenvsec_djangoSecretKey: ${{secrets.djangoSecretKey}}
  mbsimenvsec_postgresPassword: ${{secrets.postgresPassword}}
  mbsimenvsec_filestoragePassword: ${{secrets.filestoragePassword}}
  mbsimenvsec_codecovUploadToken_fmatvec: ${{secrets.codecovUploadToken_fmatvec}}
  mbsimenvsec_codecovUploadToken_hdf5serie: ${{secrets.codecovUploadToken_hdf5serie}}
  mbsimenvsec_codecovUploadToken_openmbv: ${{secrets.codecovUploadToken_openmbv}}
  mbsimenvsec_codecovUploadToken_mbsim: ${{secrets.codecovUploadToken_mbsim}}
jobs:



  getBuildMatrix:
    name: Get build matrix
    uses: ./.github/workflows/mbsim-env-getbuildmatrix.yml
    with:
      dailyInput: true
    secrets:
      githubStatusAccessToken: ${{secrets.githubStatusAccessToken}}
      djangoSecretKey: ${{secrets.djangoSecretKey}}
      postgresPassword: ${{secrets.postgresPassword}}
      filestoragePassword: ${{secrets.filestoragePassword}}
      codecovUploadToken_fmatvec: ${{secrets.codecovUploadToken_fmatvec}}
      codecovUploadToken_hdf5serie: ${{secrets.codecovUploadToken_hdf5serie}}
      codecovUploadToken_openmbv: ${{secrets.codecovUploadToken_openmbv}}
      codecovUploadToken_mbsim: ${{secrets.codecovUploadToken_mbsim}}
  buildMatrix:
    name: B&e
    uses: ./.github/workflows/mbsim-env-matrixbuild.yml
    needs: getBuildMatrix
    with:
      matrixInput: ${{needs.getBuildMatrix.outputs.matrixOutput}}
      uploadArtifactLocalLcovInput: false
    secrets:
      githubStatusAccessToken: ${{secrets.githubStatusAccessToken}}
      djangoSecretKey: ${{secrets.djangoSecretKey}}
      postgresPassword: ${{secrets.postgresPassword}}
      filestoragePassword: ${{secrets.filestoragePassword}}
      codecovUploadToken_fmatvec: ${{secrets.codecovUploadToken_fmatvec}}
      codecovUploadToken_hdf5serie: ${{secrets.codecovUploadToken_hdf5serie}}
      codecovUploadToken_openmbv: ${{secrets.codecovUploadToken_openmbv}}
      codecovUploadToken_mbsim: ${{secrets.codecovUploadToken_mbsim}}



  buildPartitionedExamples:
    name: B
    uses: ./.github/workflows/mbsim-env-matrixbuild.yml
    with:
      matrixInput: |
        {"data":
          [{
            "branches": 
              {"fmatvecBranch": "master", "hdf5serieBranch": "master", "openmbvBranch": "master", "mbsimBranch": "master"},
            "os":
              {"buildType": "linux64-dailydebug", "image": "mbsimenv/build",  "args": "--disableRunExamples"},
          }]
        }
      uploadArtifactLocalLcovInput: true
    secrets:
      githubStatusAccessToken: ${{secrets.githubStatusAccessToken}}
      djangoSecretKey: ${{secrets.djangoSecretKey}}
      postgresPassword: ${{secrets.postgresPassword}}
      filestoragePassword: ${{secrets.filestoragePassword}}
      codecovUploadToken_fmatvec: ${{secrets.codecovUploadToken_fmatvec}}
      codecovUploadToken_hdf5serie: ${{secrets.codecovUploadToken_hdf5serie}}
      codecovUploadToken_openmbv: ${{secrets.codecovUploadToken_openmbv}}
      codecovUploadToken_mbsim: ${{secrets.codecovUploadToken_mbsim}}



  examplesPre:
    name: "E pre"
    uses: ./.github/workflows/mbsim-env-matrixrunexamples.yml
    needs: buildPartitionedExamples
    with:
      matrixInput: |
        {"data": [
          {"args": "--runExamplesPre"}
        ]}
      buildInfoInput: ${{needs.buildPartitionedExamples.outputs.buildInfo}}
      runexamplesInfoInput: '{"runID": -1}'
      downloadArtifactLocalLcovInput: false
      uploadArtifactLcovdataInput: false
      downloadArtifactLcovdataInput: false
    secrets:
      githubStatusAccessToken: ${{secrets.githubStatusAccessToken}}
      djangoSecretKey: ${{secrets.djangoSecretKey}}
      postgresPassword: ${{secrets.postgresPassword}}
      filestoragePassword: ${{secrets.filestoragePassword}}
      codecovUploadToken_fmatvec: ${{secrets.codecovUploadToken_fmatvec}}
      codecovUploadToken_hdf5serie: ${{secrets.codecovUploadToken_hdf5serie}}
      codecovUploadToken_openmbv: ${{secrets.codecovUploadToken_openmbv}}
      codecovUploadToken_mbsim: ${{secrets.codecovUploadToken_mbsim}}
  examplesRun:
    name: "E worker"
    uses: ./.github/workflows/mbsim-env-matrixrunexamples.yml
    needs: [buildPartitionedExamples, examplesPre]
    with:
      matrixInput: |
        {"data": [
          {"args": "--runExamplesPartition"},
          {"args": "--runExamplesPartition"},
          {"args": "--runExamplesPartition"},
          {"args": "--runExamplesPartition"},
          {"args": "--runExamplesPartition"},
          {"args": "--runExamplesPartition"},
          {"args": "--runExamplesPartition"},
          {"args": "--runExamplesPartition"},
          {"args": "--runExamplesPartition"},
          {"args": "--runExamplesPartition"},
          {"args": "--runExamplesPartition"},
          {"args": "--runExamplesPartition"},
          {"args": "--runExamplesPartition"},
          {"args": "--runExamplesPartition"}
        ]}
      buildInfoInput: ${{needs.buildPartitionedExamples.outputs.buildInfo}}
      runexamplesInfoInput: ${{needs.examplesPre.outputs.runexamplesInfo}}
      downloadArtifactLocalLcovInput: true
      uploadArtifactLcovdataInput: true
      downloadArtifactLcovdataInput: false
    secrets:
      githubStatusAccessToken: ${{secrets.githubStatusAccessToken}}
      djangoSecretKey: ${{secrets.djangoSecretKey}}
      postgresPassword: ${{secrets.postgresPassword}}
      filestoragePassword: ${{secrets.filestoragePassword}}
      codecovUploadToken_fmatvec: ${{secrets.codecovUploadToken_fmatvec}}
      codecovUploadToken_hdf5serie: ${{secrets.codecovUploadToken_hdf5serie}}
      codecovUploadToken_openmbv: ${{secrets.codecovUploadToken_openmbv}}
      codecovUploadToken_mbsim: ${{secrets.codecovUploadToken_mbsim}}
  examplesPost:
    name: "E post"
    uses: ./.github/workflows/mbsim-env-matrixrunexamples.yml
    needs: [buildPartitionedExamples, examplesRun, examplesPre]
    with:
      matrixInput: |
        {"data": [
          {"args": "--runExamplesPost"}
        ]}
      buildInfoInput: ${{needs.buildPartitionedExamples.outputs.buildInfo}}
      runexamplesInfoInput: ${{needs.examplesPre.outputs.runexamplesInfo}}
      downloadArtifactLocalLcovInput: true
      uploadArtifactLcovdataInput: false
      downloadArtifactLcovdataInput: true
    secrets:
      githubStatusAccessToken: ${{secrets.githubStatusAccessToken}}
      djangoSecretKey: ${{secrets.djangoSecretKey}}
      postgresPassword: ${{secrets.postgresPassword}}
      filestoragePassword: ${{secrets.filestoragePassword}}
      codecovUploadToken_fmatvec: ${{secrets.codecovUploadToken_fmatvec}}
      codecovUploadToken_hdf5serie: ${{secrets.codecovUploadToken_hdf5serie}}
      codecovUploadToken_openmbv: ${{secrets.codecovUploadToken_openmbv}}
      codecovUploadToken_mbsim: ${{secrets.codecovUploadToken_mbsim}}



  examplesPreValgrind:
    name: "E valgrind pre"
    uses: ./.github/workflows/mbsim-env-matrixrunexamples.yml
    needs: [buildPartitionedExamples, examplesRun] # needs only buildPartitionedExamples;
             # exampleRun is just added to priorize the normal runs over the valgrind run;
             # moreover the dynamic scheduling does not work for parallel --runExamplesPartition jobs;
             # (examplesPreValgrind is not stared before to ensure correct startTime recording in the MBSim-Env database)
    with:
      matrixInput: |
        {"data": [
          {"args": "--runExamplesPre --valgrindExamples"}
        ]}
      buildInfoInput: ${{needs.buildPartitionedExamples.outputs.buildInfo}}
      runexamplesInfoInput: '{"runID": -1}'
      downloadArtifactLocalLcovInput: false
      uploadArtifactLcovdataInput: false
      downloadArtifactLcovdataInput: false
    secrets:
      githubStatusAccessToken: ${{secrets.githubStatusAccessToken}}
      djangoSecretKey: ${{secrets.djangoSecretKey}}
      postgresPassword: ${{secrets.postgresPassword}}
      filestoragePassword: ${{secrets.filestoragePassword}}
      codecovUploadToken_fmatvec: ${{secrets.codecovUploadToken_fmatvec}}
      codecovUploadToken_hdf5serie: ${{secrets.codecovUploadToken_hdf5serie}}
      codecovUploadToken_openmbv: ${{secrets.codecovUploadToken_openmbv}}
      codecovUploadToken_mbsim: ${{secrets.codecovUploadToken_mbsim}}
  examplesRunValgrind:
    name: "E valgrind worker"
    uses: ./.github/workflows/mbsim-env-matrixrunexamples.yml
    needs: [buildPartitionedExamples, examplesPreValgrind]
    with:
      matrixInput: |
        {"data": [
          {"args": "--runExamplesPartition --valgrindExamples"},
          {"args": "--runExamplesPartition --valgrindExamples"},
          {"args": "--runExamplesPartition --valgrindExamples"},
          {"args": "--runExamplesPartition --valgrindExamples"},
          {"args": "--runExamplesPartition --valgrindExamples"},
          {"args": "--runExamplesPartition --valgrindExamples"},
          {"args": "--runExamplesPartition --valgrindExamples"},
          {"args": "--runExamplesPartition --valgrindExamples"},
          {"args": "--runExamplesPartition --valgrindExamples"},
          {"args": "--runExamplesPartition --valgrindExamples"},
          {"args": "--runExamplesPartition --valgrindExamples"},
          {"args": "--runExamplesPartition --valgrindExamples"},
          {"args": "--runExamplesPartition --valgrindExamples"},
          {"args": "--runExamplesPartition --valgrindExamples"}
        ]}
      buildInfoInput: ${{needs.buildPartitionedExamples.outputs.buildInfo}}
      runexamplesInfoInput: ${{needs.examplesPreValgrind.outputs.runexamplesInfo}}
      downloadArtifactLocalLcovInput: true
      uploadArtifactLcovdataInput: true
      downloadArtifactLcovdataInput: false
    secrets:
      githubStatusAccessToken: ${{secrets.githubStatusAccessToken}}
      djangoSecretKey: ${{secrets.djangoSecretKey}}
      postgresPassword: ${{secrets.postgresPassword}}
      filestoragePassword: ${{secrets.filestoragePassword}}
      codecovUploadToken_fmatvec: ${{secrets.codecovUploadToken_fmatvec}}
      codecovUploadToken_hdf5serie: ${{secrets.codecovUploadToken_hdf5serie}}
      codecovUploadToken_openmbv: ${{secrets.codecovUploadToken_openmbv}}
      codecovUploadToken_mbsim: ${{secrets.codecovUploadToken_mbsim}}
  examplesPostValgrind:
    name: "E valgrind post"
    uses: ./.github/workflows/mbsim-env-matrixrunexamples.yml
    needs: [buildPartitionedExamples, examplesRunValgrind, examplesPreValgrind]
    with:
      matrixInput: |
        {"data": [
          {"args": "--runExamplesPost --valgrindExamples"}
        ]}
      buildInfoInput: ${{needs.buildPartitionedExamples.outputs.buildInfo}}
      runexamplesInfoInput: ${{needs.examplesPreValgrind.outputs.runexamplesInfo}}
      downloadArtifactLocalLcovInput: true
      uploadArtifactLcovdataInput: false
      downloadArtifactLcovdataInput: true
    secrets:
      githubStatusAccessToken: ${{secrets.githubStatusAccessToken}}
      djangoSecretKey: ${{secrets.djangoSecretKey}}
      postgresPassword: ${{secrets.postgresPassword}}
      filestoragePassword: ${{secrets.filestoragePassword}}
      codecovUploadToken_fmatvec: ${{secrets.codecovUploadToken_fmatvec}}
      codecovUploadToken_hdf5serie: ${{secrets.codecovUploadToken_hdf5serie}}
      codecovUploadToken_openmbv: ${{secrets.codecovUploadToken_openmbv}}
      codecovUploadToken_mbsim: ${{secrets.codecovUploadToken_mbsim}}
