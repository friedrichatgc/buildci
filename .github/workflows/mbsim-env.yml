name: MBSim-Env
on: [push]
jobs:
  get_ci_branches:
    runs-on: ubuntu-latest
    outputs:
      branches: ${{steps.branches.outputs.branches}}
    steps:
      - name: "Query MBSim-Env for CI branch combinations"
        id: branches
        run: >
          BRANCHES=$(echo "[{'fmatvec':'master','hdf5serie':'master','openmbv':'master','mbsim':'master'},{'fmatvec':'master','hdf5serie':'master','openmbv':'master','mbsim':'mbsimguiobjectfactory'}]");
          echo "::set-output name=branches::$BRANCHES"
  build:
    runs-on: ubuntu-latest
    needs: get_ci_branches
    env:
      TAGNAME: staging
      mbsimenvsec_githubStatusAccessToken: ${{secrets.githubStatusAccessToken}}
      mbsimenvsec_djangoSecretKey: ${{secrets.djangoSecretKey}}
      mbsimenvsec_postgresPassword: ${{secrets.postgresPassword}}
      mbsimenvsec_codecovUploadToken_fmatvec: ${{secrets.codecovUploadToken_fmatvec}}
      mbsimenvsec_codecovUploadToken_hdf5serie: ${{secrets.codecovUploadToken_hdf5serie}}
      mbsimenvsec_codecovUploadToken_openmbv: ${{secrets.codecovUploadToken_openmbv}}
      mbsimenvsec_codecovUploadToken_mbsim: ${{secrets.codecovUploadToken_mbsim}}
    strategy:
      matrix:
        branches: ${{fromJson(needs.get_ci_branches.outputs.branches)}}
        os:
          - buildType: "linux64-ci"
            image: "mbsimenv/build"
    steps:
      - name: "Dump build config"
        run: >
          echo -e " buildType = ${{matrix.os.buildType}}\n
                    image = ${{matrix.os.image}}:${{env.TAGNAME}}\n
                    fmatvecBranch = ${{matrix.branches.fmatvec}}\n
                    hdf5serieBranch = ${{matrix.branches.hdf5serie}}\n
                    openmbvBranch = ${{matrix.branches.openmbv}}\n
                    mbsimBranch = ${{matrix.branches.mbsim}}\n" | tr -s ' '
#      - name: "Pull docker build image"
#        run: docker image pull ${{matrix.os.image}}:${{env.TAGNAME}}
#      - name: "Run build/examples"
#        run: >
#          docker run
#          --init
#          --label buildtype=${{matrix.os.buildType}}
#          --env MBSIMENVDATABASE=www.mbsim-env.de:15432
#          --env MBSIMENVSERVERNAME=wwwstaging.mbsim-env.de
#          --env MBSIMENVTAGNAME=${{env.TAGNAME}}
#          --env MBSIMENVIMAGEID=$(docker image inspect -f "{{.Id}}" ${{matrix.os.image}}:${{env.TAGNAME}})
#          --env mbsimenvsec_githubStatusAccessToken
#          --env mbsimenvsec_djangoSecretKey
#          --env mbsimenvsec_postgresPassword
#          --env mbsimenvsec_codecovUploadToken_fmatvec
#          --env mbsimenvsec_codecovUploadToken_hdf5serie
#          --env mbsimenvsec_codecovUploadToken_openmbv
#          --env mbsimenvsec_codecovUploadToken_mbsim
#          ${{matrix.os.image}}:${{env.TAGNAME}}
#          --buildType ${{matrix.os.buildType}}
#          -j $(nproc)
#          --fmatvecBranch ${{matrix.branches.fmatvec}}
#          --hdf5serieBranch ${{matrix.branches.hdf5serie}}
#          --openmbvBranch ${{matrix.branches.openmbv}}
#          --mbsimBranch ${{matrix.branches.mbsim}}
