name: MBSim-Env Matrix Runexamples
on:
  workflow_call:
    inputs:
      matrixInput:
        required: true
        type: string
      buildInfoInput:
        required: true
        type: string
      runexamplesInfoInput:
        required: true
        type: string
      downloadArtifactLocalLcovInput:
        required: true
        type: boolean
      uploadArtifactLcovdataInput:
        required: true
        type: boolean
      downloadArtifactLcovdataInput:
        required: true
        type: boolean
    outputs:
      runexamplesInfo:
        value: ${{jobs.runexamples.outputs.runexamplesInfoOutput}}
    secrets:
      githubStatusAccessToken:
        required: true
      djangoSecretKey:
        required: true
      postgresPassword:
        required: true
      filestoragePassword:
        required: true
      codecovUploadToken_fmatvec:
        required: true
      codecovUploadToken_hdf5serie:
        required: true
      codecovUploadToken_openmbv:
        required: true
      codecovUploadToken_mbsim:
        required: true
env:
  # tagname and servername of remote mbsimenv server
  MBSIMENVTAGNAME: staging
  MBSIMENVSERVERNAME: wwwstaging.mbsim-env.de
  # connect to this server:port for www, database and filestorage
  MBSIMENVWWW: www.mbsim-env.de:10443
  MBSIMENVDATABASE: www.mbsim-env.de:15432
  MBSIMENVFILESTORAGE: www.mbsim-env.de:11122
  # get secrets
  mbsimenvsec_githubStatusAccessToken: ${{secrets.githubStatusAccessToken}}
  mbsimenvsec_djangoSecretKey: ${{secrets.djangoSecretKey}}
  mbsimenvsec_postgresPassword: ${{secrets.postgresPassword}}
  mbsimenvsec_filestoragePassword: ${{secrets.filestoragePassword}}
  mbsimenvsec_codecovUploadToken_fmatvec: ${{secrets.codecovUploadToken_fmatvec}}
  mbsimenvsec_codecovUploadToken_hdf5serie: ${{secrets.codecovUploadToken_hdf5serie}}
  mbsimenvsec_codecovUploadToken_openmbv: ${{secrets.codecovUploadToken_openmbv}}
  mbsimenvsec_codecovUploadToken_mbsim: ${{secrets.codecovUploadToken_mbsim}}
jobs:
  runexamples:
    name: "Partitioned Runexamples"
    runs-on: ubuntu-latest
    outputs:
      runexamplesInfoOutput: ${{steps.runexamplesDetails.outputs.runexamplesInfoStepOutput}}
    strategy:
      fail-fast: false
      matrix: ${{fromJson(inputs.matrixInput)}}
    steps:
      - name: "Download artifact archive .../mbsim-env/local/"
        if: inputs.downloadArtifactLocalLcovInput
#artifactdownload        uses: actions/download-artifact@v3
#artifactdownload        with:
#artifactdownload          name: mbsim-env-local-cov
#artifactdownload          path: ${{github.workspace}}
        run: wget -q https://www.mbsim-env.de:11443/8465739265725648/xx/local-cov.tar.gz -O ${{github.workspace}}/local-cov.tar.gz # replace this with artifactdownload
      - name: "Unarchive artifact .../mbsim-env/local/"
        if: inputs.downloadArtifactLocalLcovInput
        run: >
          mkdir -m 777 -p ${{github.workspace}}/mbsim-env/ &&
          tar -xzf ${{github.workspace}}/local-cov.tar.gz -C ${{github.workspace}}/mbsim-env/ &&
          chmod -R 777 ${{github.workspace}}/mbsim-env # the docker user id is different than the current user id
      - name: "Download artifact lcovdata"
        if: inputs.downloadArtifactLcovdataInput
        uses: actions/download-artifact@v3
        with:
          name: mbsim-env-covdata
          path: ${{github.workspace}}/mbsim-env/local
      - name: "Pull docker build image"
        run: >
          docker image pull mbsimenv/build:${{env.MBSIMENVTAGNAME}} &&
          mkdir -m 777 -p ${{github.workspace}}/mbsim-env ${{github.workspace}}/mbsim-ccache
      - name: "Run build/examples"
        run: >
          docker run
          --init
          --label buildtype=linux64-dailydebug
          --env MBSIMENVDATABASE
          --env MBSIMENVFILESTORAGE
          --env MBSIMENVSERVERNAME
          --env MBSIMENVTAGNAME
          --env MBSIMENVIMAGEID=$(docker image inspect -f "{{.Id}}" mbsimenv/build:${{env.MBSIMENVTAGNAME}})
          --env mbsimenvsec_githubStatusAccessToken
          --env mbsimenvsec_djangoSecretKey
          --env mbsimenvsec_postgresPassword
          --env mbsimenvsec_filestoragePassword
          --env mbsimenvsec_codecovUploadToken_fmatvec
          --env mbsimenvsec_codecovUploadToken_hdf5serie
          --env mbsimenvsec_codecovUploadToken_openmbv
          --env mbsimenvsec_codecovUploadToken_mbsim
          -v ${{github.workspace}}/mbsim-env:/mbsim-env
          -v ${{github.workspace}}/mbsim-ccache:/mbsim-ccache
          mbsimenv/build:${{env.MBSIMENVTAGNAME}}
          --buildType linux64-dailydebug
          --executor '<a href="https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}/attempts/${{github.run_attempt}}">GitHub Actions</a>'
          -j $(nproc)
          --ccacheSize 5
          --fmatvecBranch ${{fromJson(inputs.buildInfoInput).repo.fmatvec}}
          --hdf5serieBranch ${{fromJson(inputs.buildInfoInput).repo.hdf5serie}}
          --openmbvBranch ${{fromJson(inputs.buildInfoInput).repo.openmbv}}
          --mbsimBranch ${{fromJson(inputs.buildInfoInput).repo.mbsim}}
          --buildRunID ${{fromJson(inputs.buildInfoInput).buildRunID}}
          --runID ${{fromJson(inputs.runexamplesInfoInput).runID}}
          ${{matrix.data}}
          || exit 0
          # do not report error (is handled by www.mbsime-env.de and cache should also be saved in case of errors)
      - name: "Detailed examples output"
        id: runexamplesDetails
        shell: python
        run: |
          import json
          try:
            with open("${{github.workspace}}/mbsim-env/local/.runexamplesInfo.json", "r") as f:
              runexamplesInfo=json.load(f)
            print("https://${{env.MBSIMENVSERVERNAME}}/runexamples/run/"+str(runexamplesInfo["runID"])+"/")
            print("::set-output name=runexamplesInfoStepOutput::"+json.dumps(runexamplesInfo))
          except:
            print("No runexamplesInfo file found")
            print("::set-output name=runexamplesInfoStepOutput::{}")
      - name: "Upload artifact lcovdata"
        if: inputs.uploadArtifactLcovdataInput
        uses: actions/upload-artifact@v3
        with:
          name: mbsim-env-covdata
          retention-days: 1
          path: ${{github.workspace}}/mbsim-env/local/cov.trace.final-*-*
