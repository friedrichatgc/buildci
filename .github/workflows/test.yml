# escape=`

name: Build Docker Images (Manual)
on:
  push:
env:
  MSYS2INSTALLERURI: "https://www.mbsim-env.de/base/fileDownloadFromDBMedia/msys2mbsimenv-downloads"
  MSYSTEM: UCRT64
  CHERE_INVOKING: yes
  HOME: /home/user
defaults:
  run:
    shell: c:\msys64\usr\bin\bash.exe "{0}"
jobs:
#  win2019:
#    name: "win2019"
#    runs-on: windows-2019
#    steps:
#      - name: prepre
#        continue-on-error: true
#        run: mkdir .\content
#      - name: pre
#        continue-on-error: true
#        run: copy c:\Windows\System32\xcopy.exe .\content
#      - name: 2019hyperv
#        continue-on-error: true
#        run: docker.exe run --isolation=hyperv -v .\content:c:/content mcr.microsoft.com/windows/nanoserver:ltsc2019 cmd /c "c:\content\xcopy.exe /? & del c:\content\xcopy.exe & echo DONE"
#      - name: pre
#        continue-on-error: true
#        run: copy c:\Windows\System32\xcopy.exe .\content
#      - name: 2019process
#        continue-on-error: true
#        run: docker.exe run --isolation=process -v .\content:c:/content mcr.microsoft.com/windows/nanoserver:ltsc2019 cmd /c "c:\content\xcopy.exe /? & del c:\content\xcopy.exe & echo DONE"
#      - name: pre
#        continue-on-error: true
#        run: copy c:\Windows\System32\xcopy.exe .\content
#      - name: 2022hyperv
#        continue-on-error: true
#        run: docker.exe run --isolation=hyperv -v .\content:c:/content mcr.microsoft.com/windows/nanoserver:ltsc2022 cmd /c "c:\content\xcopy.exe /? & del c:\content\xcopy.exe & echo DONE"
#      - name: pre
#        continue-on-error: true
#        run: copy c:\Windows\System32\xcopy.exe .\content
#      - name: 2022process
#        continue-on-error: true
#        run: docker.exe run --isolation=process -v .\content:c:/content mcr.microsoft.com/windows/nanoserver:ltsc2022 cmd /c "c:\content\xcopy.exe /? & del c:\content\xcopy.exe & echo DONE"
#  win2022:
#    name: "win2022"
#    runs-on: windows-2022
#    steps:
#      - name: prepre
#        continue-on-error: true
#        run: mkdir .\content
#      - name: pre
#        continue-on-error: true
#        run: copy c:\Windows\System32\xcopy.exe .\content
#      - name: 2019hyperv
#        continue-on-error: true
#        run: docker.exe run --isolation=hyperv -v .\content:c:/content mcr.microsoft.com/windows/nanoserver:ltsc2019 cmd /c "c:\content\xcopy.exe /? & del c:\content\xcopy.exe & echo DONE"
#      - name: pre
#        continue-on-error: true
#        run: copy c:\Windows\System32\xcopy.exe .\content
#      - name: 2019process
#        continue-on-error: true
#        run: docker.exe run --isolation=process -v .\content:c:/content mcr.microsoft.com/windows/nanoserver:ltsc2019 cmd /c "c:\content\xcopy.exe /? & del c:\content\xcopy.exe & echo DONE"
#      - name: pre
#        continue-on-error: true
#        run: copy c:\Windows\System32\xcopy.exe .\content
#      - name: 2022hyperv
#        continue-on-error: true
#        run: docker.exe run --isolation=hyperv -v .\content:c:/content mcr.microsoft.com/windows/nanoserver:ltsc2022 cmd /c "c:\content\xcopy.exe /? & del c:\content\xcopy.exe & echo DONE"
#      - name: pre
#        continue-on-error: true
#        run: copy c:\Windows\System32\xcopy.exe .\content
#      - name: 2022process
#        continue-on-error: true
#        run: docker.exe run --isolation=process -v .\content:c:/content mcr.microsoft.com/windows/nanoserver:ltsc2022 cmd /c "c:\content\xcopy.exe /? & del c:\content\xcopy.exe & echo DONE"
  mbsimenv:
    name: "mbsimenv"
    runs-on: windows-2019
    steps:
      - name: Install MSYS2
        shell: powershell
        run: '[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; `
             Invoke-WebRequest -UseBasicParsing -uri "$env:MSYS2INSTALLERURI/msys2-base-x86_64.sfx.exe" -OutFile msys2.exe; `
             .\msys2.exe -y -oC:\; `
             Remove-Item msys2.exe;'
      - name: MSYS2 init
        run: echo msys2 init done
      - name: Download and extract db.tar.gz
        run: wget --no-verbose $MSYS2INSTALLERURI/db.tar.gz && `
             tar -C /var/lib/pacman/sync/ -xzf $PWD/db.tar.gz && `
             rm -f db.tar.gz
      - name: Download and extract cache.tar.gz
        run: wget --no-verbose $MSYS2INSTALLERURI/cache.tar.gz && `
             tar -C /var/cache/pacman/pkg/ -xzf $PWD/cache.tar.gz && `
             rm -f cache.tar.gz
      - name: MSYS2 initial update stage 1
        continue-on-error: true
        run: pacman --noconfirm -Suu
      - name: MSYS2 initial update stage 2
        run: pacman --noconfirm -Suu
      - name: MSYS2 install
        run: pacman --noconfirm -S `
               dos2unix `
               patch `
               unzip `
               rsync `
               openssh `
               sshpass `
               mingw-w64-ucrt-x86_64-7zip `
               mingw-w64-ucrt-x86_64-swig `
               mingw-w64-ucrt-x86_64-arpack `
               mingw-w64-ucrt-x86_64-autotools `
               mingw-w64-ucrt-x86_64-boost `
               mingw-w64-ucrt-x86_64-cmake `
               mingw-w64-ucrt-x86_64-doxygen `
               mingw-w64-ucrt-x86_64-gcc `
               mingw-w64-ucrt-x86_64-graphviz `
               mingw-w64-ucrt-x86_64-hdf5 `
               mingw-w64-ucrt-x86_64-octave `
               mingw-w64-ucrt-x86_64-openblas `
               mingw-w64-ucrt-x86_64-python-numpy `
               mingw-w64-ucrt-x86_64-python-sympy `
               mingw-w64-ucrt-x86_64-python-scipy `
               mingw-w64-ucrt-x86_64-python-matplotlib `
               mingw-w64-ucrt-x86_64-python-h5py `
               mingw-w64-ucrt-x86_64-python-psutil `
               mingw-w64-ucrt-x86_64-python-pygithub `
               mingw-w64-ucrt-x86_64-python-paramiko `
               mingw-w64-ucrt-x86_64-pyside2 `
               mingw-w64-ucrt-x86_64-pyside2-tools `
               mingw-w64-ucrt-x86_64-qwt-qt5 `
               mingw-w64-ucrt-x86_64-diffutils `
               mingw-w64-ucrt-x86_64-soqt-qt5 `
               mingw-w64-ucrt-x86_64-spooles `
               mingw-w64-ucrt-x86_64-xalan-c `
               mingw-w64-ucrt-x86_64-xerces-c `
               mingw-w64-ucrt-x86_64-ccache `
               mingw-w64-ucrt-x86_64-python-pip `
               mingw-w64-ucrt-x86_64-python-asgiref `
               mingw-w64-ucrt-x86_64-python-pytz `
               mingw-w64-ucrt-x86_64-python-sqlparse `
               mingw-w64-ucrt-x86_64-python-requests `
               mingw-w64-ucrt-x86_64-python-pyjwt `
               mingw-w64-ucrt-x86_64-python-cryptography `
               mingw-w64-ucrt-x86_64-python-cffi `
               mingw-w64-ucrt-x86_64-python-defusedxml `
               mingw-w64-ucrt-x86_64-python-oauthlib `
               mingw-w64-ucrt-x86_64-python-psycopg2 `
               mingw-w64-ucrt-x86_64-gcc-fortran `
               mingw-w64-ucrt-x86_64-python-requests-oauthlib
      - name: MSYS2 cleanup
        run: pacman --noconfirm -Scc
      - name: Install pip packages
        run: python.exe -m pip install --break-system-packages --upgrade pip==24.0 && python.exe -m pip install --break-system-packages django==3.2 django-allauth==0.55 django-octicons==1.0
      - name: install git
        run: wget --no-verbose https://github.com/git-for-windows/git/releases/download/v2.43.0.windows.1/MinGit-2.43.0-64-bit.zip && `
             unzip -d /c/git MinGit-2.43.0-64-bit.zip && rm -f MinGit-2.43.0-64-bit.zip && `
             echo 'PATH=\"$PATH:/c/git/cmd\"' >> ~/.bash_profile && `
             git config --global --add safe.directory '*'
